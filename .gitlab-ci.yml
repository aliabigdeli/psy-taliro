image: python:3.9

stages:
  - analyze
  - unit-test
  - regression-test
  - build
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

cache:
  paths:
    - .cache/pip/
    - .venv/

before_script:
  - pip install poetry

.analyze:
  stage: analyze
  only:
    - pushes
    - branches
    - merge_requests
    - tags

flake8:
  extends: .analyze
  script:
    - poetry install
    - poetry run flake8 -j 1 --statistics src stubs examples tests

black:
  extends: .analyze
  script:
    - poetry install
    - poetry run black --check src tests stubs examples

mypy:
  extends: .analyze
  script:
    - poetry install
    - poetry run mypy --pretty

isort:
  extends: .analyze
  script:
    - poetry install
    - poetry run isort .


.unittest:
  stage: unit-test
  script:
    - poetry install
    - poetry run python -m unittest discover -v -s "tests" -p "test_*.py"
  only:
    - pushes
    - branches
    - merge_requests
    - tags

unittest-cp37:
  extends: .unittest
  image: python:3.7
  cache: {}

unittest-cp38:
  extends: .unittest
  image: python:3.8
  cache: {}

unittest-cp39:
  extends: .unittest
  image: python:3.9

.regressiontest:
  stage: regression-test
  script:
    - poetry install
    - poetry run python3 examples/nonlinear.py
    - poetry run python3 examples/f16.py
  only:
    - merge_requests

regressiontest-cp37:
  extends: .regressiontest
  image: python:3.7
  cache: {}

regressiontest-cp38:
  extends: .regressiontest
  image: python:3.8
  cache: {}

regressiontest-cp39:
  extends: .regressiontest
  image: python:3.9
  cache: {}

wheel:
  stage: build
  script:
    - poetry build
  only:
    - pushes
    - branches
    - merge_requests
    - tags
  except:
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/

pypi:
  stage: publish
  script:
    - poetry build
    - poetry publish
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

pages:
  stage: publish
  script:
    - poetry install
    - poetry run sphinx-build -b html docs public
  only:
    refs:
      - tags
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/
  artifacts:
    paths:
      - public
