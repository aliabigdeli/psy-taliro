stages:
  - analyze
  - test
  - build
  - publish

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_VIRTUALENVS_IN_PROJECT: "true"

cache:
  paths:
    - .cache/pip/
    - .venv/

before_script:
  - pip install poetry

flake8:
  stage: analyze
  image: python:3.8-slim
  script:
    - poetry install
    - poetry run flake8 -j 1 --statistics src stubs examples tests

black:
  stage: analyze
  image: python:3.8-slim
  script:
    - poetry install
    - poetry run black --check src tests stubs examples

mypy:
  stage: analyze
  image: python:3.8-slim
  script:
    - poetry install
    - poetry run mypy --pretty

unittest:
  stage: test
  image: python:3.8
  script:
    - poetry install --extras tests --extras tltk
    - poetry run pip install git+https://github.com/andersonjwan/rtamt
    - poetry run python -m unittest discover -v -s "tests" -p "test_*.py"

build:
  stage: build
  image: python:3.8-slim
  script:
    - poetry build
  except:
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/

pypi:
  stage: publish
  image: python:3.8-slim
  script:
    - poetry build
    - poetry publish
  only:
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/

    
  artifacts:
    paths:
      - dist/*.whl
      - dist/*.tar.gz

pages:
  stage: publish
  image: python:3.8
  script:
    - poetry install --extras docs
    - poetry run sphinx-build -b html docs public
  only:
    variables:
      - $CI_COMMIT_TAG && $CI_COMMIT_TAG =~ /^v*/
  artifacts:
    paths:
      - public
